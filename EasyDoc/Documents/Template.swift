//
//  Document.swift
//  EasyDoc
//
//  Created by Rodrigo Hilkner on 24/01/18.
//  Copyright Â© 2018 Rodrigo Hilkner. All rights reserved.
//

import Foundation

class Template {
    var type: String
    var contents: String
    var fields: [Field]
    
    init(type: String, content: String, fields: [Field]) {
        self.type = type
        self.contents = content
        self.fields = fields
    }
    
    
    /// Replace blank fields of the template contents with "_____"
    func readContents() -> String? {
        
        var readableContents = self.contents
        
        // Getting all occurrences of "[" and "]"
        let indicesInitial = readableContents.indicesOf(string: "[")
        let indicesFinal = readableContents.indicesOf(string: "]")
        
        guard indicesInitial.count == indicesFinal.count else {
            print("-> WARNING: EasyDocQueryError.databaseObject @ Template.readContents()")
            return nil
        }
        
        // offset holds how many characters in total the text lost with the replacing
        var offset = 0
        
        // Replacing every empty field value with "____"
        for i in 0..<indicesInitial.count {
            
            // Getting range to be replaced
            let initialIndex = readableContents.index(readableContents.startIndex, offsetBy: indicesInitial[i] + offset)
            let finalIndex = readableContents.index(readableContents.startIndex, offsetBy: indicesFinal[i] + offset + 1)
            
            // Calculating offset generated by replacing the subrange below
            offset += 5 - readableContents.distance(from: initialIndex, to: finalIndex)
            
            readableContents.replaceSubrange(initialIndex..<finalIndex, with: "_____")
        }
        
        return readableContents
    }
}

